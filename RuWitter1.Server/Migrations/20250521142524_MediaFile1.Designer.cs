// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RuWitter1.Server.Models;

#nullable disable

namespace RuWitter1.Server.Migrations
{
    [DbContext(typeof(PostContext))]
    [Migration("20250521142524_MediaFile1")]
    partial class MediaFile1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RuWitter1.Server.Models.MediaExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<int?>("PermittedMediaTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PermittedMediaTypeId");

                    b.ToTable("MediaExtensions");
                });

            modelBuilder.Entity("RuWitter1.Server.Models.MediaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("ExtensionId")
                        .HasColumnType("integer");

                    b.Property<Guid>("Name")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ExtensionId");

                    b.ToTable("MediaFiles");
                });

            modelBuilder.Entity("RuWitter1.Server.Models.PermittedMediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PermittedMediaTypes");
                });

            modelBuilder.Entity("RuWitter1.Server.Models.MediaExtension", b =>
                {
                    b.HasOne("RuWitter1.Server.Models.PermittedMediaType", null)
                        .WithMany("PermittedExtensions")
                        .HasForeignKey("PermittedMediaTypeId");
                });

            modelBuilder.Entity("RuWitter1.Server.Models.MediaFile", b =>
                {
                    b.HasOne("RuWitter1.Server.Models.MediaExtension", "Extension")
                        .WithMany("MediaFiles")
                        .HasForeignKey("ExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extension");
                });

            modelBuilder.Entity("RuWitter1.Server.Models.MediaExtension", b =>
                {
                    b.Navigation("MediaFiles");
                });

            modelBuilder.Entity("RuWitter1.Server.Models.PermittedMediaType", b =>
                {
                    b.Navigation("PermittedExtensions");
                });
#pragma warning restore 612, 618
        }
    }
}
